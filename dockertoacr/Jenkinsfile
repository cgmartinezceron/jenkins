pipeline {
    agent any    
    environment {
        registry = 'azure-vote-front'
        registryCredential = 'acrjenkins'
        registryUrl = 'acrjenkins.azurecr.io'
        dockerImage = ''
    }

    stages{
        stage ('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/cgmartinezceron/jenkins.git']]])
            }
        }

        // Building Docker images
        stage('Building image') {
            steps{
                script {
                    dir("dockertoacr"){
                        dockerImage = docker.build registry
                    }
                    
                }
            }
        }

        // Uploading Docker images into ACR
        stage('Upload Image to ACR') {
            steps{    
                script {
                    docker.withRegistry( "http://${registryUrl}", registryCredential ) {
                    dockerImage.push()
                    }
                }
            }
        }

        // Stopping Docker containers for cleaner Docker run
        stage('stop previous containers') {
            steps {
                sh 'docker ps -f name=mypythonContainer -q | xargs --no-run-if-empty docker container stop'
                sh 'docker container ls -a -fname=mypythonContainer -q | xargs -r docker container rm'
            }
        }
        
        stage('Docker Run') {
            steps{
                script {
                        sh 'docker run -d -p 8096:5000 --rm --name mypythonContainer ${registryUrl}/${registry}'
                }
            }

        }
    }
}